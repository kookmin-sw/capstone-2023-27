# -*- coding: utf-8 -*-
"""FinBERT_감성분석.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U4cMf9TyxZvF4QfnXoMENF2BTfVmwcaZ
"""

!pip install transformers

"""### Loading FinBERT model"""

from transformers import AutoTokenizer, AutoModelForSequenceClassification, pipeline

tokenizer = AutoTokenizer.from_pretrained("snunlp/KR-FinBert-SC")
model = AutoModelForSequenceClassification.from_pretrained("snunlp/KR-FinBert-SC").cuda()

nlp = pipeline('text-classification', model=model, tokenizer=tokenizer)
results = nlp('APS홀딩스, 작년 영업손실 47억…적자 지속')
print(results)

"""### Data preprocessing"""

from tqdm import tqdm
import torch
import torch.nn as nn

device = "cuda:0" if torch.cuda.is_available() else "cpu"

import pandas as pd

news = pd.read_csv('drive/MyDrive/Capstone/data/news.csv')
news.head()

titles = list(news['title'])
outputs_list = []

for title in tqdm(titles):
    inputs = tokenizer(title, return_tensors='pt').to(device)
    output = model(**inputs)
    print(output)
    output = output.logits.tolist()[0]
    outputs_list.append(output)

outputs = torch.tensor(outputs_list)
predictions = nn.functional.softmax(outputs, dim=-1)

df_sc = pd.DataFrame(predictions.detach().numpy())
# df_sc.columns = ['Positive','Negative','Neutral']

df_sc.columns = ['Negative', 'Neutral', 'Positive']

news = pd.concat([news, df_sc], axis=1)
news

news[180:250]

news.to_csv('news_with_sent.csv', index=False)

